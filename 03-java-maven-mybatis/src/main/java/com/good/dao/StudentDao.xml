<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.good.dao.StudentDao">
    <!--
      select:表示查询操作.
      id:你要执行的SQL语法的唯一标识,mybatis会使用这个id的值来找到要执行的SQL语句
         可以自定义,但要求你使用接口中的方法名称.
      resultType:表示结果类型的,是SQL语句执行后得到的ResultSet,遍厉这个ResultSet得到java对象的类型
                 写的是类型的全限定名称
    -->
    <select id="selectStudents" resultType="com.good.entity.Student">
        select * from student order by id
    </select>
    <!--插入操作-->
    <insert id="insertStudents" >
        insert into student values (#{id},#{name},#{email},#{age})
    </insert>
</mapper>

<!--
    sql映射文件(SQL mapper):写SQL语句的,mybatis会执行这些SQL
    1.指定约束文件
      <!DOCTYPE mapper
            PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
            "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

      mybatis-3-mapper.dtd 是约束文件的名称,扩展名是dtd的.
    2.约束文件的作用: 限制和检查当前文件中出现的标签,属性必须符合mybatis的要求.

    3.mapper 是当前文件的根标签,必须的.
      namespace:叫做命名空间,唯一的值,可以是自定义的字符串.
                要求你使用到接口的全限定名称.

    4.在当前文件中,可以使用特定的标签,表示数据库的特定操作,
      <select>:表示执行查询,select语句
      <update>:表示更新数据库的操作,就是在<update>标签中写的是update SQL语句
      <insert>:表示插入,放的是insert语句
      <delete>:表示删除,执行的delete语句

-->